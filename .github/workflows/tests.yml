# Generated from:
# https://github.com/zopefoundation/meta/tree/master/config/zope-product
name: tests

on:
  push:
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 12 * * 0'  # run once a week on Sunday
  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable remote debugging?'
        required: false
        default: false
        type: boolean

jobs:
  build:
    strategy:
      # We want to see all failures:
      fail-fast: false
      matrix:
        os:
        - ubuntu
        config:
        # [Python version, tox env]
        - ["3.9",   "lint"]
        - ["2.7",   "py27"]
        - ["3.7",   "py37"]
        - ["3.8",   "py38"]
        - ["3.9",   "py39"]
        - ["3.10",  "py310"]
        - ["3.11",  "py311"]
        - ["3.9",   "coverage"]

    runs-on: ${{ matrix.os }}-latest
    container:
      image: python:${{ matrix.config[0] }}-buster
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    name: ${{ matrix.config[1] }}
    steps:
    - uses: actions/checkout@v2
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.config[0] }}-${{ hashFiles('setup.*', 'tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.config[0] }}-
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    # Enable tmux debugging of manually-triggered workflows if the input option was provided
    - name: Start tmux session if debugging is enabled
      uses: lhotari/action-upterm@v1
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug == 'true' }}
      with:
        # limit ssh access to the user who triggered the workflow
        limit-access-to-actor: true

    - name: Test
      run: tox -e ${{ matrix.config[1] }}
    - name: Coverage
      if: matrix.config[1] == 'coverage'
      run: |
        pip install coveralls coverage-python-version
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
